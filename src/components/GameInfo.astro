---
const { game } = Astro.props;
---
<div class="gameInfo game__info">
  <div class="gameInfo__fields">
    <div class="gameInfo__field">
      <div class="gameInfo__value"><span role="img" aria-labelledby="lblPls">üë™</span> {game.players}</div>
      <div class="gameInfo__label" id="lblPls">Poƒçet hr√°ƒç≈Ø</div>
    </div>
    <div class="gameInfo__field">
      <div class="gameInfo__value"><span role="img" aria-labelledby="lblTime">‚è∞</span> {game.time}</div>
      <div class="gameInfo__label" id="lblTime">D√©lka hry</div>
    </div>
    <div class="gameInfo__field">
      <div class="gameInfo__value"><span role="img" aria-labelledby="lblAge">üë∂</span> {game.age}</div>
      <div class="gameInfo__label" id="lblAge">Vƒõk</div>
    </div>
  </div>

  {game.tags && (
    <div class="gameInfo__tags">
      {game.tags.map((tag, i) => <span class="gameInfo__tag">{tag}</span>)}
    </div>
  )}

  {!!game.images?.length && (
    <>
      <h2>Galerie</h2>
      <div class="gameInfo__gallery">
        {game.images.map((image, i) => (
          <button
            type="button"
            class="gameInfo__preview"
            style={{backgroundImage: `url(/images/games/${game.codeName}/${image})`}}
            data-fslightbox="game-lightbox"
          />
        ))}
      </div>
    </>
  )}

  {game.extLinks && (
    <div class="gameInfo__extLinks">
      {game.extLinks.bgg && (
        <a href={game.extLinks.bgg} target="_blank" rel="noreferrer noopener">
          <img class="bggLogo" src="/images/bgg.svg" alt="Profil hry na BoardGameGeek.com" />
        </a>
      )}
      {game.extLinks.zatrolene && (
        <a href={game.extLinks.zatrolene} target="_blank" rel="noreferrer noopener">
          <img class="zhLogo" src="/images/zatrolene-hry.png" alt="Profil hry na ZatroleneHry.cz" />
        </a>
      )}
    </div>
  )}
</div>

<style>
  .gameInfo__fields { display: flex; justify-content: center; }
.gameInfo__field {
  background: rgba(75,0,130,0.2);
  margin: 0 1rem 1rem 0;
  text-align: center;
  border-radius: 10px;
  &:last-child { margin-right: 0; }
}
.gameInfo__value {
  padding: 1rem 1rem 0;
  font-size: 1.4rem;
}

.gameInfo__label {
  color: rgba(75, 0, 130, 0.7);
  text-transform: uppercase;
  margin: 0.5rem 1rem;
  font-weight: bold;
}

.gameInfo__gallery {
  width: 100%;
  display: grid;
  grid-gap: 1rem;
  grid-template-columns: repeat(4, 1fr);
  grid-auto-rows: minmax(6rem, auto);
  margin-bottom: 2rem;
}

.gameInfo__preview {
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
  background-position: center center;
  background-size: cover;
  text-decoration: none; transition: all 0.2s ease;
  cursor: pointer;
  &:hover { transform: scale(1.1); box-shadow: 0 0 10px rgba(0, 0, 0, 0.8); }
}

.gameInfo__extLinks { display: flex; align-items: center; justify-content: center;
  a { transition: all 0.2s ease;
    &:hover { transform: scale(1.1); }
  }
  a img { max-height: 4rem; margin: 0 0.5rem;}
}

.gameInfo__tags { margin-bottom: 1rem; text-align: center; }
.gameInfo__tag { background: rgba(75, 0, 130, 0.2); border-radius: 999px; padding: 0.1rem 0.7rem; margin: 0 0.5rem 0.5rem 0; font-size: 0.9rem; display: inline-block; }

@media (min-width: @breakpointGameDetail) {
  .gameInfo__fields { justify-content: left; }
  .gameInfo__tags { text-align: left; }
  .gameInfo__extLinks { justify-content: flex-start; }
}
</style>